<?php
/**
 * Created by PhpStorm.
 * User: Admin
 * Date: 2019/2/22
 * Time: 17:01
 */
namespace app\index\controller;
use app\index\model\MessageModel;
use app\index\Traits\Whole;
use think\Controller;
class Message extends Controller
{
    use Whole{
        isUser as public;
        isOutInsider as public;
    }
    /**
     * @var $model
     * 公共模型
     */
    protected $model;
    /**
     * @var $data
     * 用户资料
     */
    protected $data;

    /**
     * 初始化
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        try{
            self::isUser();
            self::isOutInsider();
            $data = Whole::dataInfo();
            $this->model = new MessageModel( $data );
            $this->data = $data;
        }catch (\Exception $e){
            $this->error( $e->getMessage() );
        }
    }

	/**
	 * @return MessageModel
	 * @throws \Exception
	 */
    public function model(){
    	return new MessageModel( Whole::dataInfo() );
    }

    /**
     * @return mixed
     * 用户消息
     */
    public function message(){
    	try{
		    $this->model = $this->model();
		    $arr = Whole::Classify();    //获取头部分类
		    $data = Whole::dataInfo();  //获取用户信息
		    $tion = input('get.tion');
		    if(empty($tion)){$tion = 1;}
		    $message =  $this->model->message();
		    return view('message',[
			    'data'  =>  $data,
			    'tion'  =>  $tion,
			    'message' => $message,
			    'arr'   =>  $arr,
			    'title' =>  '我的消息'
		    ]);
	    }catch (\Exception $e){
			$this->error( $e->getMessage() );
	    }
    }
    /**
     * @return \think\response\Json
     * 好友验证
     */
    public function is_friend(){
        try{
        	$this->model = $this->model();
            if(Request()->isPost()){
                $msg = input('post.');
                $code = array(
                    'is_fd' =>  $msg['type'],
                    'type'  =>  $msg['type']
                );
                $this->model->is_friend( $msg , $code );
            }
        }catch (\Exception $e){
            return json_decode( $e->getMessage() ,true);
        }
    }
    /**
     * @return \think\response\Json
     * 删除信息
     */
    public function deleteCon(){
        try{
        	$this->model = $this->model();
            if(Request()->isGet()){
                $id = input('get.id');
                $this->model->deleteCon( $id );
            }
        }catch (\Exception $e){
            return json_decode( $e->getMessage() ,true);
        }
    }
    /**
     * @return \think\response\Json
     * 删除所有信息
     */
    public function delAllMsg(){
        try{
        	$this->model = $this->model();
            if(Request()->isGet()){
                $this->model->delallmsg( $this->data['username'] );
            }
        }catch (\Exception $e){
            return json_decode( $e->getMessage() ,true);
        }
    }
}