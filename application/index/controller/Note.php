<?php
namespace app\index\controller;
use app\index\model\NoteModel;
use app\index\Traits\Date;
use app\index\Traits\Whole;
use think\Controller;
class Note extends Controller
{
    use Whole{
        isUser as public;
        isOutInsider as public;
    }
    /**
     * @var $model
     * 公共模型
     */
    protected $model;
    /**
     * @var $data
     * 用户信息
     */
    protected $data;

    /**
     * 初始化
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        try{
            self::isUser();
            self::isOutInsider();
            $data = Whole::dataInfo();
            $this->model = new NoteModel( $data );
            $this->data = $data;
        }catch (\Exception $e){
            $this->error( $e->getMessage() );
        }
    }

	/**
	 * @return NoteModel
	 * @throws \Exception
	 */
    public function model(){
        return new NoteModel( Whole::dataInfo() );
    }
    /**
     * @return mixed+
     * 帖子详情
     */
    public function note(){
        try{
            $this->model = $this->model();
            $arr = Whole::Classify();    //获取头部分类
            $data = Whole::dataInfo();  //获取用户信息
            if(Request()->isGet()){
                $id = input('get.id');
                $note = $this->model->note( $id );
            }
	        return $this->fetch('note',[
		        'data'  =>  $data,
		        'note'  =>  $note,
		        'arr'   =>  $arr
	        ]);
        }catch (\Exception $e){
            return json_decode( $e->getMessage() , true);
        }
    }
    /**
     * @return mixed|\think\response\Json
     * 新增帖子
     */
    public function addNote(){
        try{
            $this->model = $this->model();
            $arr = Whole::Classify();    //获取头部分类
            $data = Whole::dataInfo();  //获取用户信息
            $one = rand(0,99);
            $two = rand(0,99);
            $ploper = $two + $one;
            if(Request()->isPost()){
                $msg = input('post.');
                $msg['date'] = time();
                $msg['username'] = $data['username'];
                $msg['is_show'] = 1;
                $msg['state'] = 2;
                $this->model->addNote($msg);
            }
            return view('addNote',[
	            'arr'   =>  $arr,
	            'one' => $one,
	            'two' => $two,
	            'ploper' => $ploper,
	            'data'  =>  $data
            ]);
        }catch (\Exception $e){
            return json_decode( $e->getMessage() ,true);
        }
    }

    /**
     * @return \think\response\Json
     * 发布评论
     */
    public function content(){
        try{
            $this->model = $this->model();
            if(Request()->isPost()){
                $msg = input('post.');
                $msg['date'] = Date::getNowTime();
                $msg['is_show'] = 1;
                $msg['username'] = $this->data['username'];
//                $note = $this->model->noteInfo( $msg['id'] );  //帖子信息
	            $this->model->content($msg);
            }else{
                $this->error('访问错误!');
            }
        }catch (\Exception $e){
            return json_decode( $e->getMessage() ,true);
        }
    }

    /**
     * @return mixed
     * 帖子点赞
     */
    public function good(){
        try{
            $this->model = $this->model();
            if(Request()->isGet()){
                $msg = input('get.');
                $msg['date'] = Date::getNowTime();
                $this->model->good( $msg );
            }
        }catch (\Exception $e){
            return json_decode($e->getMessage(),true);
        }
    }
    /**
     * @return \think\response\Json
     * 收藏帖子
     */
    public function collTion(){
        try{
            $this->model = $this->model();
            if (Request()->isGet()) {
                $info = input('get.');
                if (empty($info['id'])) {
                    return json(array('code' => 0, 'msg' => '帖子不存在!'));
                }
                $msg = array(
                    'nid' => $info['id'],
                    'username' => $this->data['username'],
                    'coll' => 1
                );
                $this->model->collTion( $info, $msg );
            }
        }catch (\Exception $e){
            return json_decode( $e->getMessage(), true);
        }
    }
    /**
     * @return \think\response\Json
     * 举报帖子
     */
    public function Report(){
        try{
            $this->model = $this->model();
            if(Request()->isPost()){
                $msg = input('post.');
                $code = array(
                    'nid' => $msg['nid'],
                    'username' => $this->data['username']
                );
                $this->model->Report($msg,$code);
            }
        }catch (\Exception $e){
            return json_decode( $e->getMessage() , true);
        }
    }
}
