<?php
/**
 * Created by PhpStorm.
 * User: Admin
 * Date: 2019/3/5
 * Time: 10:25
 */
namespace app\admin\controller;
use app\admin\model\AppealModel;
use app\admin\Traits\Whole;
use think\Controller;
use think\Db;
class Appeal extends Controller{
    use Whole{
        isUser as public;
        isOutInsider as public;
    }
    /**
     * @var $model
     * 公共模型
     */
    protected $model;
    /**
     * @var $data
     * 用户信息
     */
    protected $data;
    /**
     * 初始化
     */
     public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        try{
            self::isUser();
            self::isOutInsider();
            $data = Whole::dataInfo();
            $this->model = new AppealModel( $data );
            $this->data = $data;
        }catch (\Exception $e){
            $this->error($e->getMessage());
        }
    }

    /**
     * @return AppealModel
     * @throws \think\Exception
     */
    public function model(){
         return new AppealModel( Whole::dataInfo() );
    }

    /**
     * @return mixed
     * 申诉列表
     */
    public function Appeal(){
        try{
            $this->model = $this->model();
            $tion = input('get.tion');
            $appeal = $this->model->Appeal( $tion );
            $page = $appeal['data']->render();
            return view('Appeal',[
	            'appeal'    =>  $appeal,
	            'page'  =>  $page
            ]);
        }catch (\Exception $e){
            $this->error( $e->getMessage() );
        }
    }
    /**
     * @return \think\response\Json
     * 申诉提交
     */
    public function addAppeal(){
        try{
            $this->model = $this->model();
            if (Request()->isPost()) {
                $msg = input('post.');
                $this->model->addAppeal($msg);
            }
        }catch (\Exception $e){
            return json_decode($e->getMessage(),true);
        }
    }
    /**
     * @return \think\response\Json
     * 全面自动检测
     */
    public function Testing(){
        if(Request()->isGet()){
            $msg = input('get.');
            if(empty($msg)){
                return json(array('code' => 0 , 'msg' => '检测失败,请重试!'));
            }
            $filed = 'password,number,email,name';
            $appeal = Db::table('appeal')->where(array('id' => $msg['id']))->field($filed)->find();
            $data = Db::table('user')->where(array('username' => $msg['username']))->field($filed)->find();
            $arr = ['password','number','email','name'];
            $Testing = 0;
            for ($i = 0; $i < count($arr); $i++){
                if($appeal[$arr[$i]] == $data[$arr[$i]]){
                    $Testing = $Testing + 25;
                }
            }
            return json(array('code' => 0 , 'msg' => $Testing.'%'));
        }
    }
    /**
     * 是否通过
     */
    public function is_Appeal(){
        try{
            $this->model = $this->model();
            if(Request()->isGet()){
                $msg = input('get.');
                $this->model->is_Appeal($msg);
            }
        }catch (\Exception $e){
            return json_decode($e->getMessage(),true);
        }
    }

}