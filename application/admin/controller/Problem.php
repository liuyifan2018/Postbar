<?php
/**
 * Created by PhpStorm.
 * User: Admin
 * Date: 2019/3/2
 * Time: 15:32
 */
namespace app\admin\controller;
use app\admin\model\ProblemModel;
use app\admin\Traits\Date;
use app\admin\Traits\Whole;
use think\Controller;
class Problem extends Controller{
    use Whole{
        isUser as public;
        isOutInsider as public;
    }
    /**
     * @var $model
     * 公共模型
     */
    protected $model;
    /**
     * @var $data
     */
    protected $data;

    /**
     * 实例化模型
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        try{
            self::isUser();
            self::isOutInsider();
            $data = Whole::dataInfo();
            $this->model = new ProblemModel( $data );
            $this->data = $data;
        }catch ( \Exception $e){
            $this->error( $e->getMessage() );
        }
    }

    /**
     * @return ProblemModel
     * @throws \Exception
     */
    public function model(){
        return new ProblemModel( Whole::dataInfo() );
    }
    /**
     * @return mixed
     * 我的密保
     */
    public function problem(){
        try{
            $this->model = $this->model();
            $data = $this->data;
            $problem = $this->model->problem();
            $page = $problem['data']->render();
        }catch (\Exception $e){
            return json_decode( $e->getMessage(),true);
        }
        return view('problem',[
	        'data'  =>  $data,
	        'problem'   =>  $problem,
	        'page'  =>  $page
        ]);
    }
    /**
     * @return mixed|\think\response\Json
     * 添加密保
     */
    public function addProblem(){
        try{
            $this->model = $this->model();
            $data = $this->data;
            if(Request()->isPost()){
                $msg = input('post.');
                $code = [
                    'username'  =>  $data['username'],
                    'problem'   =>  $msg['problem'],
                    'answer'    =>  $msg['answer'],
                    'date'  =>  Date::getNowTime(),
                    'is_show'   =>  1
                ];
                $this->model->addProblem($msg,$code);
            }
        }catch (\Exception $e){
            return json_decode($e->getMessage(),true);
        }
        return view('addProblem',[
	        'data'  =>  $data
        ]);
    }
    /**
     * @return mixed|\think\response\Json
     * 修改密保
     */
    public function editProblem(){
        try{
            $this->model = $this->model();
            $data = $this->data;
            $id = input('get.id');
            $problem = $this->model->infoProblem($id);
            if(Request()->isPost()){
                $msg = input('post.');
                $this->model->editProblem($msg,$problem);
            }
        }catch (\Exception $e){
            return json_decode($e->getMessage(),true);
        }
        return view('editProblem',[
	        'data'  =>  $data,
	        'problem'   =>  $problem
        ]);
    }
    /**
     * @return \think\response\Json
     * 删除密保
     */
    public function delProblem(){
        try{
            $this->model = $this->model();
            if(Request()->isGet()){
                $id = input('get.id');
                $this->model->delProblem($id);
            }
        }catch (\Exception $e){
            return json_decode($e->getMessage(),true);
        }
    }
}